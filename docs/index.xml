<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kzktmr&#39;s blog</title>
    <link>/</link>
    <description>Recent content on kzktmr&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 04 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>sfとggplotで地図を描く</title>
      <link>/2017/09/04/draw-map-with-sf-and-ggplot/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/04/draw-map-with-sf-and-ggplot/</guid>
      <description>はじめに Rで地理情報を扱うのにmatptoolsパッケージを使っていたのですが， いつの頃からか，例えばreadShapePoly()でSha</description>
    </item>
    
    <item>
      <title>Tesseract OCR を試してみた</title>
      <link>/2017/07/06/a-trial-of-tesseract-ocr/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/06/a-trial-of-tesseract-ocr/</guid>
      <description>Tesseract OCR という open source の OCR エンジンを試してみた。 インストールは Homebrew でできる。 brew install tesseract 英語以外の言語で OCR を行うには，教師データを用意する必要がある。 ここか</description>
    </item>
    
    <item>
      <title>blogdownでブログを作成したメモ</title>
      <link>/2017/04/04/rebuild-blog-with-blogdown/</link>
      <pubDate>Tue, 04 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/04/04/rebuild-blog-with-blogdown/</guid>
      <description>blogdownを使ってblogを再構築してみました。日本語の情報はそれほど多くないです。 Rとblogdownでかんたんにgithub.io</description>
    </item>
    
    <item>
      <title>RからでExcelで開けるCSVを出力する</title>
      <link>/2016/12/27/create-excel-csv-with-r/</link>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/27/create-excel-csv-with-r/</guid>
      <description>はじめに Rからcsvファイルを出力したとき，Excelがインストールされていて，csvがExcelに関連付けされている環境では，出力したcs</description>
    </item>
    
    <item>
      <title>ggplot2を使って都道府県塗り分け地図を描く関数</title>
      <link>/2016/12/04/choropleth-map-of-japan-with-ggplot2/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/12/04/choropleth-map-of-japan-with-ggplot2/</guid>
      <description>都道府県の塗り分け地図を簡単に描くには，NipponパッケージのJapanPrefecturesMap()関数が便利です。 library(Nippon) この関数を修正し</description>
    </item>
    
    <item>
      <title>tikzDeviceでハイフンをマイナスにする（ggplotの場合）</title>
      <link>/2016/11/28/make-hyphens-to-minus-on-tikzdevice/</link>
      <pubDate>Mon, 28 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/28/make-hyphens-to-minus-on-tikzdevice/</guid>
      <description>Rからtikzを使えるライブラリにtikzDeviceがあります。 これを使えば，Rで作成した図を，簡単にLaTeXのtikzpicture環</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
    <item>
      <title>Fukuoka City Wifi の使用状況を可視化する（その2）</title>
      <link>/2015/12/22/fukuoka-city-wifi-2/</link>
      <pubDate>Tue, 22 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/22/fukuoka-city-wifi-2/</guid>
      <description>福岡市のCKANに， Fukuoka City Wi-Fi 利用状況という 興味深いデータが掲載されていました。このデータをRで少し触ってみました。 以下のライブラリを使います。</description>
    </item>
    
    <item>
      <title>Fukuoka City Wifi の使用状況を可視化する</title>
      <link>/2015/12/17/fukuoka-city-wifi/</link>
      <pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/17/fukuoka-city-wifi/</guid>
      <description>福岡市のCKANに， Fukuoka City Wi-Fi 利用状況という 興味深いデータが掲載されていました。このデータをRで少し触ってみました。 以下のライブラリを使います。</description>
    </item>
    
  </channel>
</rss>